{
    "Connectivity": {
        "queries": [
            {
                "label": "Check PostgreSQL version",
                "query": "SELECT version();"
            }
        ]
    },
    "Exploratory": {
        "queries": [
            {
                "label": "First 10 patients",
                "query": "SELECT * FROM patient LIMIT 10;"
            },
            {
                "label": "List unique hospitals",
                "query": "SELECT DISTINCT hospitalid FROM patient LIMIT 10;"
            },
            {
                "label": "Sample diagnoses",
                "query": "SELECT DISTINCT diagnosisstring FROM diagnosis LIMIT 10;"
            },
            {
                "label": "List lab test names",
                "query": "SELECT DISTINCT labname FROM lab LIMIT 10;"
            },
            {
                "label": "Extreme value vitals",
                "query": "SELECT * FROM vitalperiodic WHERE temperature::text ~ '^[0-9.]+$' AND (temperature < 30 OR temperature > 42);"
            }
        ]
    },
    "Analytical": {
        "queries": [
            {
                "label": "Average age by gender",
                "query": "SELECT COALESCE(NULLIF(gender, ''), 'Unknown') AS gender, AVG(CAST(age AS INTEGER)) FROM patient WHERE age ~ '^[0-9]+$' GROUP BY COALESCE(NULLIF(gender, ''), 'Unknown');"
            },
            {
                "label": "Top 5 most common diagnoses",
                "query": "SELECT diagnosisstring, COUNT(*) FROM diagnosis GROUP BY diagnosisstring ORDER BY COUNT(*) DESC LIMIT 5;"
            },
            {
                "label": "Average lab result per test type",
                "query": "SELECT labname, AVG(CAST(labresult AS DOUBLE PRECISION)) FROM lab WHERE labresult ~ '^[0-9.]+$' GROUP BY labname LIMIT 10;"
            },
            {
                "label": "Top 10 patients by vital count",
                "query": "SELECT patientunitstayid, COUNT(*) FROM vitalperiodic GROUP BY patientunitstayid ORDER BY COUNT(*) DESC LIMIT 10;"
            }
        ]
    },
    "Join-heavy": {
        "queries": [
            {
                "label": "Patient vitals with gender",
                "query": "SELECT p.patientunitstayid, p.gender, v.heartrate FROM patient p JOIN vitalperiodic v ON p.patientunitstayid = v.patientunitstayid WHERE v.heartrate IS NOT NULL LIMIT 50;"
            },
            {
                "label": "Lab counts by unit type",
                "query": "SELECT pa.unittype, COUNT(l.labid) AS lab_tests FROM patient pa JOIN lab l ON pa.patientunitstayid = l.patientunitstayid GROUP BY pa.unittype;"
            }
        ]
    },
    "Transactional": {
        "queries": [
            {
                "label": "Insert and delete test patient",
                "setup": [
                    "INSERT INTO patient (patientunitstayid, age, gender, hospitalid) VALUES (9999999, '42', 'Male', 1);"
                ],
                "query": "DELETE FROM patient WHERE patientunitstayid = 9999999;"
            },
            {
                "label": "Insert and delete lab entries",
                "setup": [
                    "INSERT INTO lab (patientunitstayid, labname, labresult) VALUES (9999999, 'Na+', '140.0');"
                ],
                "query": "DELETE FROM lab WHERE patientunitstayid = 9999999;"
            }
        ]
    },
    "Parallel": {
        "queries": [
            {
                "label": "Simulated lab session per client",
                "run_parallel": true,
                "setup": [
                    "INSERT INTO patient (patientunitstayid, age, gender, hospitalid) VALUES (7777777, '30', 'Other', 5);"
                ],
                "query_seq": [
                    "INSERT INTO lab (patientunitstayid, labname, labresult) VALUES (7777777, 'Na+', '137.0');",
                    "INSERT INTO lab (patientunitstayid, labname, labresult) VALUES (7777777, 'K+', '4.5');",
                    "DELETE FROM lab WHERE patientunitstayid = 7777777 AND labname IN ('Na+', 'K+');"
                ],
                "simulated_client_number": 3,
                "queries_per_time": 2,
                "execution_loop_time_ms": 1000
            }
        ]
    }
}