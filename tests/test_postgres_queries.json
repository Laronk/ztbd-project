{
    "Test database connection": {
        "queries": [
            {
                "label": "Check PostgreSQL version",
                "query": "SELECT version();"
            }
        ]
    },
    "Simple queries": {
        "queries": [
            {
                "label": "Get a few patients data",
                "query": "SELECT * FROM patient LIMIT 10;"
            },
            {
                "label": "Get all patients older than 65",
                "query": "SELECT * FROM patient WHERE age ~ '^[0-9]+$' AND CAST(age AS INTEGER) > 65;"
            },
            {
                "label": "Count the number of entries in the lab table",
                "query": "SELECT COUNT(*) FROM lab;"
            },
            {
                "label": "List unique diagnoses",
                "query": "SELECT DISTINCT diagnosisstring FROM diagnosis LIMIT 20;"
            }
        ]
    },
    "Complex queries": {
        "queries": [
            {
                "label": "Get average age of patients grouped by gender (three genders: m, f, Unknown)",
                "query": "SELECT COALESCE(NULLIF(gender, ''), 'Unknown') AS gender, AVG(CAST(age AS INTEGER)) AS avg_age FROM patient WHERE age ~ '^[0-9]+$' GROUP BY COALESCE(NULLIF(gender, ''), 'Unknown');"
            },
            {
                "label": "Get number of diagnoses per patient",
                "query": "SELECT patientunitstayid, COUNT(*) AS diagnosis_count FROM diagnosis GROUP BY patientunitstayid ORDER BY diagnosis_count DESC;"
            },
            {
                "label": "Join patient and vitalperiodic to get heart rate info",
                "query": "SELECT p.patientunitstayid, p.gender, v.heartrate FROM patient p JOIN vitalperiodic v ON p.patientunitstayid = v.patientunitstayid WHERE v.heartrate IS NOT NULL LIMIT 50;"
            }
        ]
    },
    "Computationally simple query": {
        "queries": [
            {
                "label": "Get minimum and maximum temperature from vitalperiodic",
                "query": "SELECT MIN(temperature), MAX(temperature) FROM vitalperiodic WHERE temperature::text ~ '^[0-9.]+$';"
            }
        ]
    },
    "Computationally complex query": {
        "queries": [
            {
                "label": "Compute average heart rate for patients with >100 vitals entries",
                "query": "SELECT patientunitstayid, AVG(heartrate) AS avg_hr FROM vitalperiodic WHERE heartrate::text ~ '^[0-9.]+$' GROUP BY patientunitstayid HAVING COUNT(*) > 100 ORDER BY avg_hr DESC LIMIT 20;"
            }
        ]
    }
}